{
  "openapi": "3.0.1",
  "info": {
    "title": "Book Service API",
    "description": "A simple REST API for managing a collection of books.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/books/{id}": {
      "get": {
        "tags": [
          "book-controller"
        ],
        "summary": "Get a book by its ID",
        "description": "Fetches a book based on its unique ID.",
        "operationId": "getBookById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Book not found"
          },
          "200": {
            "description": "Found the book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "book-controller"
        ],
        "summary": "Update an existing book",
        "description": "Updates the details of an existing book by its ID.",
        "operationId": "updateBook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": [
          "book-controller"
        ],
        "summary": "Delete a book",
        "description": "Deletes a book from the store by its ID.",
        "operationId": "deleteBook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Book not found"
          },
          "204": {
            "description": "Book deleted successfully"
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "tags": [
          "book-controller"
        ],
        "summary": "Get a list of all books",
        "description": "Returns a list of all books in the store.",
        "operationId": "getAllBooks",
        "responses": {
          "200": {
            "description": "Successfully retrieved list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "book-controller"
        ],
        "summary": "Create a new book",
        "description": "Adds a new book to the store.",
        "operationId": "createBook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid input"
          },
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          }
        }
      }
    }
  }
}